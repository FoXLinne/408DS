// 开放式定值法
// 散列表表长为 m，散列函数为 H(key)，
// 根据散列函数 H(key)，求得元素的初始散列地址
// 发生第 i 次冲突的地址 Hi = (H(key) + di) % m，di 为偏移量
    // d0 = 0
    // 线性探测法：0, 1, 2, 3, 4..., m-1
    // 平方探测法：0^2, 1^2, -1^2, 2^2, -2^2..., k^2, -k^2 (k <= m/2)
    // 双散列法：i * H2(key)
    // 伪随机法：随机数发生器产生的随机数

// 查找元素
// 按照不同方法进行遍历，若能查找到，则查找成功，若目标地址的元素为空，则查找失败

// 删除元素
    // 特别情况 不能物理上删除该元素，都是逻辑删除，使用一个标志位来标记该元素是否被删除
    // 防止在查找过程中探测到目标元素地址为空直接失败
    // 插入新元素时，可以插入到逻辑删除的位置中，并且将标志位清除
    // 当散列表中删除元素过多时，可能会导致查找效率下降
    // 可以尝试定期整理表内数据

// 拓展
    // 线性探测法的探测覆盖率：最多发生 m-1 次冲突，即可探测完整个散列表
    // 平方探测法的探测覆盖率：仅能探测一半 / 以上地址，不能探测完整个散列表，
    // 有一些空闲位置也会插入失败